version: "3"

services:
  adminer:
    container_name: adminer
    build:
      context: ./docker
      dockerfile: Dockerfile-adminer
    restart: always
    environment:
      ADMINER_DESIGN: "pepa-linha"
      ADMINER_PLUGINS: "enum-types enum-option edit-calendar tables-filter dump-json"
    ports:
      - 8765:8080
    networks:
      - webapp-network
  beanstalkd:
    container_name: beanstalkd
    build:
      context: ./docker
      dockerfile: Dockerfile-beanstalkd
    restart: always
    networks:
      - webapp-network
  beanstalkd-console:
    container_name: beanstalkd-console
    build:
      context: ./docker
      dockerfile: Dockerfile-beanstalkd-console
    restart: always
    ports:
      - 2080:2080
    networks:
      - webapp-network
  certbot:
    container_name: certbot
    build:
      context: ./docker
      dockerfile: Dockerfile-certbot
    restart: always
    networks:
      - webapp-network
  laravel-echo-server:
    container_name: laravel-echo-server
    build:
      context: ./docker
      dockerfile: Dockerfile-laravel-echo-server
    restart: always
    networks:
      - webapp-network
  nginx:
    container_name: nginx
    build:
      context: ./docker
      dockerfile: Dockerfile-nginx
    restart: always
    environment:
      NGINX_PORT: 8080
      NGINX_HOST: "localhost"
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./files/webapp:/var/www/html/
    networks:
      - webapp-network
  php:
    container_name: php
    build:
      context: ./docker
      dockerfile: Dockerfile-php
    restart: always
    volumes:
      - ./files/webapp:/var/www/html/
    networks:
      - webapp-network
  postfix:
    container_name: postfix
    build:
      context: ./docker
      dockerfile: Dockerfile-postfix
    restart: always
    volumes:
      - ./files/data/postfix:/var/spool/postfix
    networks:
      - webapp-network
  postgres:
    container_name: postgres
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-P@$$W0rd}
      POSTGRES_DB: webapp
    build:
      context: ./docker
      dockerfile: Dockerfile-postgres
    restart: always
    volumes:
      - ./files/data/postgres:/var/lib/postgresql/data
    networks:
      - webapp-network
  proxy:
    container_name: proxy
    build:
      context: ./docker
      dockerfile: Dockerfile-proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - webapp-network
  redis:
    container_name: redis
    build:
      context: ./docker
      dockerfile: Dockerfile-redis
    restart: always
    volumes:
      - ./files/data/redis:/data
    networks:
      - webapp-network

networks:
    webapp-network:
        driver: bridge
